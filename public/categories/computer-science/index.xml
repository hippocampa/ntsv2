<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Computer Science on notesbyts</title>
    <link>http://localhost:1313/categories/computer-science/</link>
    <description>Recent content in Computer Science on notesbyts</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Dec 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/computer-science/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Demonstration of Load More UI Patterns in Academic Web Interfaces</title>
      <link>http://localhost:1313/publications/load-more-ui-patterns-demo/</link>
      <pubDate>Sun, 01 Dec 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/publications/load-more-ui-patterns-demo/</guid>
      <description>&lt;h2 id=&#34;abstract&#34;&gt;Abstract&lt;/h2&gt;&#xA;&lt;p&gt;This demonstration publication showcases the implementation of progressive disclosure patterns in academic web interfaces, specifically focusing on &amp;quot;load more&amp;quot; functionality for content-heavy sections. The research examines user interaction patterns and performance implications of such implementations.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Keywords&lt;/strong&gt;: progressive disclosure, web interfaces, academic publishing, user experience, load more patterns&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;In academic web interfaces, the challenge of presenting large amounts of content while maintaining usability has led to the adoption of progressive disclosure patterns. This paper demonstrates the implementation and effectiveness of &amp;quot;load more&amp;quot; functionality in sectioned content displays.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Efficient Algorithms: Lessons from Competitive Programming</title>
      <link>http://localhost:1313/blog/competitive-programming-lessons/</link>
      <pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/competitive-programming-lessons/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Competitive programming has been an incredible teacher in my journey as a computer scientist. Beyond the thrill of solving complex problems under time pressure, it has fundamentally shaped how I approach algorithm design and optimization in real-world applications.&lt;/p&gt;&#xA;&lt;p&gt;In this post, I&#39;ll share key insights from competitive programming that have proven invaluable in academic research and software development.&lt;/p&gt;&#xA;&lt;h2 id=&#34;the-art-of-problem-analysis&#34;&gt;The Art of Problem Analysis&lt;/h2&gt;&#xA;&lt;h3 id=&#34;understanding-constraints&#34;&gt;Understanding Constraints&lt;/h3&gt;&#xA;&lt;p&gt;The first skill competitive programming teaches is constraint analysis. Every problem comes with specific limits:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
